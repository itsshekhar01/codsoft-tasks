#include <iostream>
using namespace std;

char board[3][3];
char currentPlayer = 'X';

void initializeBoard() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            board[i][j] = ' ';
        }
    }
}

void printBoard() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            cout << board[i][j];
            if (j < 2) {
                cout << " | ";
            }
        }
        cout << endl;
        if (i < 2) {
            cout << "---------" << endl;
        }
    }
}

bool isValidMove(int row, int col) {
    return row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ';
}

bool checkWin(int row, int col) {
    // Check for a win condition here
    // You'll need to implement this function according to your win conditions
    return false;
}

int main() {
    initializeBoard();
    bool gameWon = false;
    int moves = 0;

    while (!gameWon && moves < 9) {
        printBoard();
        int row, col;
        cout << "Player " << currentPlayer << ", enter row and column (0-2): ";
        cin >> row >> col;

        if (isValidMove(row, col)) {
            board[row][col] = currentPlayer;
            gameWon = checkWin(row, col);
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
            moves++;
        } else {
            cout << "Invalid move. Try again." << endl;
        }
    }

    printBoard();

    // Add logic to display the game result here
    // You'll need to implement this based on the game outcome

    return 0;
}
x
